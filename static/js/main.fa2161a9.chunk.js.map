{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"uSAIeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAQ,CACJC,cAAe,iFC2BRC,E,2MA3BXC,MAAQ,CAACC,KAAM,I,EAGfC,aAAe,SAACC,GACZA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGzB,IAAD,OACL,OACI,yBAAKM,UAAW,cACZ,0BAAMD,SAAYE,KAAKN,aAAcK,UAAY,WAC7C,yBAAKA,UAAY,SACb,+CACA,2BACIE,KAAK,OACLC,MAASF,KAAKR,MAAMC,KACpBU,SAAa,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACZ,KAAMW,EAAEE,OAAOJ,kB,GAnBtDK,IAAMC,WCgCfC,G,kBAlCX,WAAYZ,GAAO,IAAD,8BACd,4CAAOA,KAaXa,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAACU,WAdf,EAAKvB,MAAQ,CAACuB,MAAQ,GAEtB,EAAKH,SAAWL,IAAMW,YALR,E,iFAUdlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAU/C,IAAD,EACwBV,KAAKH,MAAMuB,MAAhCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KACpB,OACI,yBAAKC,MAAS,CAACC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,SAC1C,yBACIU,IAAOzB,KAAKY,SACZc,IAAOL,EACPM,IAAML,EAAKM,e,GA5BPrB,IAAMC,YCWfqB,EARG,SAAChC,GACf,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAACX,GAC7B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG5C,OAAO,yBAAKrB,UAAY,cAAc+B,ICmB3BI,E,2MAtBX1C,MAAQ,CAACsC,OAAQ,I,EAIhBK,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEACSC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAACC,MAAO/C,KAFN,OACRgD,EADQ,OAKd,EAAKpC,SAAS,CAACyB,OAAQW,EAASC,KAAKC,UALvB,2C,8HASd,OACI,yBAAK5C,UAAY,eAAewB,MAAO,CAACqB,UAAW,SAC/C,kBAAC,EAAD,CAAW9C,SAAUE,KAAKmC,iBAC1B,kBAAC,EAAD,CAAWL,OAAU9B,KAAKR,MAAMsC,c,GAjB9BvB,IAAMC,WCHxBqC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.fa2161a9.chunk.js","sourcesContent":["import axios from 'axios';\n\n//axios makes api requests easier than fetch method\n//axios makes a request to unsplashed api and will return json data\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers:{\n        Authorization: 'Client-ID e938667136a2daf20322962d93a1db3cb2336255d4101a3941dcfdc83b453fea '\n    }\n});","import React from 'react';\n\n//component that renders the searchBar input field in our page\n//remember to bind \"this\" on the function using arrow functions\n//to use input from this component, we pass callback from parent (onSubmit) to child and child will run the callback\n\nclass SearchBar extends React.Component{\n    state = {term: ''};\n\n    //we use an arrow function to bind \"this\" to the SearchBar component\n    onFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state.term);\n    }\n\n    render() {\n        return (\n            <div className =\"ui segment\">\n                <form onSubmit = {this.onFormSubmit} className = \"ui form\">\n                    <div className = \"field\">\n                        <label>Image Search</label>\n                        <input \n                            type=\"text\" \n                            value = {this.state.term}\n                            onChange = { (e) => this.setState({term: e.target.value}) }\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\n//react Ref system used to interact with DOM on a specific element\nclass ImageCard extends React.Component {\n    constructor(props){\n        super (props)\n\n        this.state = {spans : 0};\n\n        this.imageRef = React.createRef();\n    }\n\n    //waits for page to load before running the setSpan method\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    //method that helps set spans of css auto-row heights\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n        this.setState({spans});\n    }\n\n    render(){\n        const {description, urls} = this.props.image\n        return(\n            <div style = {{gridRowEnd: `span ${this.state.spans}`}}>\n                <img \n                    ref = {this.imageRef}\n                    alt = {description}\n                    src ={urls.regular}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ImageCard;","import React from 'react';\nimport './ImageList.css'; \nimport ImageCard from './ImageCard';\n\n//function that grabs the imagelist URL and returns them to our empty state array using map function\n//ids are ususlly used as key properties\nconst ImageList = (props) => {\n    const images = props.images.map((image ) =>{\n        return <ImageCard key={image.id} image={image} />\n    })\n\n    return <div className = \"image-list\">{images}</div>;\n}\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\n\n//app refactor into class\nclass App extends React.Component{\n    state = {images: [] };\n\n    //we give the method an async keyword and the results(a network request) the await keyword so its easier to use later as a variable\n    //onSearchSubmit needs to be made an arrow function so that this.setState refers to the component\n     onSearchSubmit = async (term) => {\n        const response = await unsplash.get('/search/photos', {\n            params: {query: term}\n        })\n        \n        this.setState({images: response.data.results});\n    }\n\n    render(){\n        return(\n            <div className = \"ui container\" style={{marginTop: '10px'}}>\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                <ImageList images = {this.state.images} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}